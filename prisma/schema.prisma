datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albums    Album[]  // One user can have many albums
}

model AlbumCategory {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Name of the category (e.g., "Vacation", "Work", etc.)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albums    Album[]  // One category can have many albums
}

model Album {
  id            Int           @id @default(autoincrement())
  name          String        // Name of the album
  userId        Int           // Foreign key to the User model
  description   String?       // Optional short description for the album
  categoryId    Int           // Foreign key to the AlbumCategory model
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id])
  category      AlbumCategory @relation(fields: [categoryId], references: [id])
  images        Image[]       // One album can have many images
}

model Image {
  id          Int      @id @default(autoincrement())
  url         String   // URL or path to the image
  albumId     Int      // Foreign key to the Album model
  description String?  // Optional description for the image (e.g., location, context)
  tags        String[] // Array of tags (e.g., ["vacation", "beach", "summer"])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  album       Album    @relation(fields: [albumId], references: [id])
}
